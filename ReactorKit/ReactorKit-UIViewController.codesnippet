<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>viewcontroller</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import UIKit
import RxSwift
import RxCocoa
import ReactorKit
import SnapKit
import Then

final class &lt;#ViewController#&gt;: UIViewController, View {
  typealias Reactor = &lt;#Reactor#&gt;

  var disposeBag: DisposeBag = DisposeBag()

  // MARK: Initializing
  init(reactor: Reactor) {
    defer { self.reactor = reactor }
    super.init(nibName: nil, bundle: nil)
  }

  required init?(coder aDecoder: NSCoder) {
    fatalError("init(coder:) has not been implemented")
  }


  // MARK: View Lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
  }

  // MARK: Binding
  func bind(reactor: Reactor) {
  }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>144BD58E-D71F-4BC1-8105-0F8DDF8E9FA0</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>ReactorKit - UIViewController</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
